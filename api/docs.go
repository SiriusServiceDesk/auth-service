// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/status/": {
            "get": {
                "description": "Get the status of the API",
                "produces": [
                    "application/json"
                ],
                "summary": "Get the status",
                "operationId": "Status",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_status.Response"
                        }
                    }
                }
            }
        },
        "/v1/auth/confirmEmail": {
            "post": {
                "description": "Confirm a user's email address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Confirm Email",
                "parameters": [
                    {
                        "description": "Confirm email request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.ConfirmEmailRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Log in a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.LoginResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/registration": {
            "post": {
                "description": "Register a new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Registration",
                "parameters": [
                    {
                        "description": "Registration request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/resendCode": {
            "post": {
                "description": "Resend the email confirmation code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Resend Code",
                "parameters": [
                    {
                        "description": "Resend code request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.ResendCodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/resetPassword": {
            "post": {
                "description": "Send a reset password email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset password request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.ResetPasswordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/auth/resetPassword/confirm": {
            "post": {
                "description": "Confirm the reset password action",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Reset Password Confirm",
                "parameters": [
                    {
                        "description": "Reset password confirm request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.ResetPasswordConfirmRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sdfsdfdsfs",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/internal_web_auth.RawResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "payload": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/user": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Get current user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003ctoken\u003e",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.UserResponseDoc"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/internal_web_auth.RawResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_web_auth.ConfirmEmailRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "verification_code": {
                    "type": "integer",
                    "example": 1324
                }
            }
        },
        "internal_web_auth.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "passworD1_"
                }
            }
        },
        "internal_web_auth.LoginResponseDoc": {
            "type": "object",
            "properties": {
                "details": {},
                "payload": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string",
                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9"
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "internal_web_auth.RawResponse": {
            "type": "object",
            "properties": {
                "details": {},
                "payload": {},
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "internal_web_auth.RegistrationRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "passworD1_"
                }
            }
        },
        "internal_web_auth.ResendCodeRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                }
            }
        },
        "internal_web_auth.ResetPasswordConfirmRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "new_password": {
                    "type": "string"
                }
            }
        },
        "internal_web_auth.ResetPasswordRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "example@example.com"
                }
            }
        },
        "internal_web_auth.UserResponseDoc": {
            "type": "object",
            "properties": {
                "details": {},
                "payload": {
                    "type": "object",
                    "properties": {
                        "email": {
                            "type": "string",
                            "example": "example@example.com"
                        },
                        "id": {
                            "type": "string",
                            "example": "8e3b780c-dfb5-4cd2-ae6b-d83f84a483f9"
                        },
                        "name": {
                            "type": "string",
                            "example": "Keril"
                        },
                        "second_name": {
                            "type": "string",
                            "example": "Maksimovich"
                        },
                        "surname": {
                            "type": "string",
                            "example": "Zagrebin"
                        },
                        "telegram_id": {
                            "type": "string",
                            "example": "311441242"
                        }
                    }
                },
                "status": {
                    "type": "integer",
                    "example": 200
                }
            }
        },
        "internal_web_status.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
